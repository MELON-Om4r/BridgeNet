"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[757],{42219:function(e){e.exports=JSON.parse('{"functions":[{"name":"_start","desc":"Starts the internal processes for ServerBridge.","params":[{"name":"config","desc":"","lua_type":"dictionary"}],"returns":[{"desc":"","lua_type":"nil\\r\\n"}],"function_type":"static","ignore":true,"source":{"line":47,"path":"src/ServerBridge.lua"}},{"name":"WaitForBridge","desc":"Waits for a BridgeObject to be created, then resumes the thread.\\nThis does NOT replicate. If the server creates a BridgeObject, it will NOT replicate to the client.\\nThis will wait until a BridgeObject is created for the client/server respectively.\\n\\n```lua\\nlocal Bridge = BridgeNet.WaitForBridge(\\"Remote\\")\\nBridge:FireTo(game.Players.Someone, \\"Hello\\", \\"World!\\")\\n```","params":[{"name":"remoteName","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"BridgeObject"}],"function_type":"static","source":{"line":205,"path":"src/ServerBridge.lua"}},{"name":"FireTo","desc":"Sends data to a specific player.\\n\\n```lua\\nlocal Bridge = BridgeNet.CreateBridge(\\"Remote\\")\\nBridge:FireTo(game.Players.Someone, \\"Hello\\", \\"World!\\")\\n```","params":[{"name":"plr","desc":"","lua_type":"Player"},{"name":"...","desc":"","lua_type":"...any"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":224,"path":"src/ServerBridge.lua"}},{"name":"FireToAllExcept","desc":"Sends data to every player except for one.\\n\\n```lua\\nlocal Bridge = BridgeNet.CreateBridge(\\"Remote\\")\\nBridge:FireToAllExcept(game.Players.Someone, \\"Hello\\", \\"World!\\")\\nBridge:FireToAllExcept({game.Players.A, game.Players.B}, \\"Not to A or B, but to C.\\")\\n```","params":[{"name":"blacklistedPlrs","desc":"","lua_type":"Player | {Player}"},{"name":"...","desc":"","lua_type":"...any"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":247,"path":"src/ServerBridge.lua"}},{"name":"FireAllInRangeExcept","desc":"Sends data to every single player within the range except certain blacklisted players. Returns the players affected, for usage later.\\n\\n```lua\\nlocal Bridge = BridgeNet.CreateBridge(\\"Remote\\")\\nlocal PlayersSent = Bridge:FireToAllInRangeExcept(\\n\\tgame.Players.Someone,\\n\\tVector3.new(50,50,50),\\n\\t10,\\n\\t\\"Hello\\",\\n\\t\\"World!\\"\\n)\\n\\ntask.wait(5)\\n\\nBridge:FireToMultiple(PlayersSent, \\"Time for an update!\\")\\n```","params":[{"name":"blacklistedPlrs","desc":"","lua_type":"Player | {Player}"},{"name":"point","desc":"","lua_type":"Vector3"},{"name":"range","desc":"","lua_type":"number"},{"name":"...","desc":"","lua_type":"...any"}],"returns":[{"desc":"","lua_type":"{Player}"}],"function_type":"method","source":{"line":296,"path":"src/ServerBridge.lua"}},{"name":"FireAllInRange","desc":"Sends data to every single player within the range. Returns the players affected, for usage later.\\n\\n```lua\\nlocal Bridge = BridgeNet.CreateBridge(\\"Remote\\")\\nlocal PlayersSent = Bridge:FireAllInRange(\\n\\tVector3.new(50,50,50),\\n\\t10,\\n\\t\\"Hello\\",\\n\\t\\"World!\\"\\n)\\n\\ntask.wait(5)\\n\\nBridge:FireToMultiple(PlayersSent, \\"Time for an update!\\")\\n```","params":[{"name":"point","desc":"","lua_type":"Vector3"},{"name":"range","desc":"","lua_type":"number"},{"name":"...","desc":"","lua_type":"...any"}],"returns":[{"desc":"","lua_type":"{Player}"}],"function_type":"method","source":{"line":350,"path":"src/ServerBridge.lua"}},{"name":"FireAll","desc":"Sends data to every single player, with no exceptions.\\n\\n```lua\\nlocal Bridge = BridgeNet.CreateBridge(\\"Remote\\")\\nBridge:FireAll(\\"Hello, world!\\")\\n```","params":[{"name":"...","desc":"","lua_type":"...any"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":379,"path":"src/ServerBridge.lua"}},{"name":"FireToMultiple","desc":"Sends data to multiple players.\\n\\n```lua\\nlocal Bridge = BridgeNet.CreateBridge(\\"Remote\\")\\nBridge:FireToMultiple({game.Players.A, game.Players.B}, \\"Hi!\\", \\"Hello.\\")\\n```","params":[{"name":"plrs","desc":"","lua_type":"{Player}"},{"name":"...","desc":"","lua_type":"...any"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":402,"path":"src/ServerBridge.lua"}},{"name":"Connect","desc":"Creates a connection.\\n\\n```lua\\nlocal Bridge = BridgeNet.CreateBridge(\\"Remote\\")\\nBridge:Connect(function(plr, data)\\n\\tprint(plr .. \\" has sent \\" .. data)\\nend)\\n```","params":[{"name":"func","desc":"","lua_type":"(plr: Player, ...any) -> nil"}],"returns":[{"desc":"","lua_type":"Connection"}],"function_type":"method","source":{"line":484,"path":"src/ServerBridge.lua"}},{"name":"Destroy","desc":"Destroys the identifier, and deletes the object reference.\\n\\n```lua\\nlocal Bridge = BridgeNet.CreateBridge(\\"Remote\\")\\nBridge:Destroy()\\n\\nBridge:FireTo(game.Players.A) -- Errors, the object is deleted.\\n```","params":[],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":505,"path":"src/ServerBridge.lua"}}],"properties":[],"types":[],"name":"ServerBridge","desc":"The general method of communicating from the server to the client.","source":{"line":38,"path":"src/ServerBridge.lua"}}')}}]);