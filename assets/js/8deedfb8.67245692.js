"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[556],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>c});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var d=a.createContext({}),u=function(e){var t=a.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=u(e.components);return a.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=u(r),c=n,k=m["".concat(d,".").concat(c)]||m[c]||s[c]||i;return r?a.createElement(k,l(l({ref:t},p),{},{components:r})):a.createElement(k,l({ref:t},p))}));function c(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=m;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var u=2;u<i;u++)l[u]=r[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},26437:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var a=r(87462),n=(r(67294),r(3905));const i={},l="Changelog",o={type:"mdx",permalink:"/BridgeNet/CHANGELOG",source:"@site/pages/CHANGELOG.md",title:"Changelog",description:"Versions are formatted in semver.",frontMatter:{}},d=[{value:"0.2.0-alpha",id:"020-alpha",level:2},{value:"0.1.0-alpha",id:"010-alpha",level:2}],u={toc:d};function p(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"changelog"},"Changelog"),(0,n.kt)("p",null,"Versions are formatted in ",(0,n.kt)("a",{parentName:"p",href:"https://semver.org/spec/v2.0.0.html"},"semver"),"."),(0,n.kt)("h1",{id:"185-beta"},"1.8.5-beta"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Added better performance profiling"),(0,n.kt)("li",{parentName:"ul"},"Added ExceededTimeLimit signal"),(0,n.kt)("li",{parentName:"ul"},"Added InternalError signal (Unused for now)"),(0,n.kt)("li",{parentName:"ul"},"Added server-sided middleware (no typescript support yet, sorry ): ","[UNSTABLE]",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Added :SetMiddleware()"),(0,n.kt)("li",{parentName:"ul"},"Added :AddMiddleware()"),(0,n.kt)("li",{parentName:"ul"},"Middleware will be added to the client soon enough"))),(0,n.kt)("li",{parentName:"ul"},"Added ",(0,n.kt)("inlineCode",{parentName:"li"},"t")," as a dependency"),(0,n.kt)("li",{parentName:"ul"},"Added .CreateIdentifiersFromDictionary"),(0,n.kt)("li",{parentName:"ul"},"Added .WaitForIdentifier, client-sided only."),(0,n.kt)("li",{parentName:"ul"},"ReceiveLogFunction and SendLogFunction are now stable and ready to be used"),(0,n.kt)("li",{parentName:"ul"},"Fixed symbols for roblox-ts(?)"),(0,n.kt)("li",{parentName:"ul"},"Improved typings for Luau"),(0,n.kt)("li",{parentName:"ul"},"Better error handling")),(0,n.kt)("h1",{id:"175-beta"},"1.7.5-beta"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Improved typings for both ts and luau"),(0,n.kt)("li",{parentName:"ul"},"Re-added :Once()"),(0,n.kt)("li",{parentName:"ul"},"Updated dependency versions")),(0,n.kt)("h1",{id:"165-beta"},"1.6.5-beta"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Fixed invokes"),(0,n.kt)("li",{parentName:"ul"},"Added documentation for invokes"),(0,n.kt)("li",{parentName:"ul"},"Added .CreateBridgesFromDictionary()"),(0,n.kt)("li",{parentName:"ul"},"Significantly improved / fixed roblox-ts typings")),(0,n.kt)("h1",{id:"155-beta"},"1.5.5-beta"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'Added "RemoteFunction"-type API',(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Added ServerBridge:OnInvoke(function() end)"),(0,n.kt)("li",{parentName:"ul"},"Added ClientBridge:InvokeServerAsync(), yields."),(0,n.kt)("li",{parentName:"ul"},"Added ClientBridge:InvokeServer(), returns a promise instead of yielding."))),(0,n.kt)("li",{parentName:"ul"},"Refactored some code to be better-organized."),(0,n.kt)("li",{parentName:"ul"},"Refactored project structure / testing code to allow for dependencies"),(0,n.kt)("li",{parentName:"ul"},"Added Promise as a dependency"),(0,n.kt)("li",{parentName:"ul"},"Added GoodSignal as a dependency")),(0,n.kt)("h1",{id:"145-beta"},"1.4.5-beta"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Ported to typescript!")),(0,n.kt)("h1",{id:"144-beta"},"1.4.4-beta"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"You no longer need to declare DefaultReceive and DefaultSend- they default to 60."),(0,n.kt)("li",{parentName:"ul"},"Fixed ServerBridge:Destroy()"),(0,n.kt)("li",{parentName:"ul"},"Added print message while waiting for the ClientBridge to be replicated"),(0,n.kt)("li",{parentName:"ul"},"Removed the print statement in OnClientEvent. oops!")),(0,n.kt)("h1",{id:"143-beta"},"1.4.3-beta"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Removed .FromBridge, use .WaitForBridge or .CreateBridge (createbridge returns the existing bridge object if it exists)"),(0,n.kt)("li",{parentName:"ul"},"Configuration object now uses symbols instead of regular strings"),(0,n.kt)("li",{parentName:"ul"},"Added global custom logging support. UNSTABLE, DONT USE IN PRODUCTION"),(0,n.kt)("li",{parentName:"ul"},"Changed some loops to use ipairs instead of pairs"),(0,n.kt)("li",{parentName:"ul"},"Used table.clear instead of tbl = {} for better efficiency"),(0,n.kt)("li",{parentName:"ul"},"Fixed Disconnect"),(0,n.kt)("li",{parentName:"ul"},"Optimizations (thank you @Baileyeatspizza)"),(0,n.kt)("li",{parentName:"ul"},"Fixed ClientBridge breaking if the client's bridge was created before the server created the bridge (thank you evanchan0819)"),(0,n.kt)("li",{parentName:"ul"},"Fixed client-to-server communication only sending the first argument")),(0,n.kt)("h1",{id:"043-alpha"},"0.4.3-alpha"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Connections now spawn a thread, making them yield-safe and error-proof."),(0,n.kt)("li",{parentName:"ul"},"Added .WaitForBridge()"),(0,n.kt)("li",{parentName:"ul"},"Added Roact's Symbol class- not used for now, will be used for .Start configuration in the future."),(0,n.kt)("li",{parentName:"ul"},".CreateBridge() now has the same functionality of .FromBridge()"),(0,n.kt)("li",{parentName:"ul"},"Server now checks for the BridgeObject to exist before trying to run connections. If it doesn't exist, nothing happens.")),(0,n.kt)("h1",{id:"033-alpha"},"0.3.3-alpha"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Hotfix for .CreateIdentifier()")),(0,n.kt)("h1",{id:"032-alpha"},"0.3.2-alpha"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Connections now use pairs instead of ipairs")),(0,n.kt)("h1",{id:"031-alpha"},"0.3.1-alpha"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Better error handling / messages"),(0,n.kt)("li",{parentName:"ul"},"Removed unused function in ServerBridge/ClientBridge."),(0,n.kt)("li",{parentName:"ul"},"Added .CreateUUID(), .PackUUID(), .UnpackUUID(). (ty Pyseph!)"),(0,n.kt)("li",{parentName:"ul"},"Added .DictionaryToTable(), which converts a dictionary into an alphabetically-ordered table."),(0,n.kt)("li",{parentName:"ul"},"Switched .ChildAdded for the client's serdeLayer to be in serdeLayer._start()"),(0,n.kt)("li",{parentName:"ul"},'Switched "Network" documentation to be "BridgeNet"- Network was a working title.'),(0,n.kt)("li",{parentName:"ul"},"Removed one_remote_event from config.")),(0,n.kt)("h1",{id:"021-alpha"},"0.2.1-alpha"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Better error handling and messages"),(0,n.kt)("li",{parentName:"ul"},"Errors during send/receive will not repeat due to failure to clear queue"),(0,n.kt)("li",{parentName:"ul"},"If the queue is blank, it will not send. ")),(0,n.kt)("h2",{id:"020-alpha"},"0.2.0-alpha"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Some optimizations and polishing"),(0,n.kt)("li",{parentName:"ul"},"Added .FromBridge(), which lets you get a Bridge object from wherever."),(0,n.kt)("li",{parentName:"ul"},"Fixed an issue where an unused artifact was being sent, increasing size drastically"),(0,n.kt)("li",{parentName:"ul"},"Fixed multiple documentation mistakes")),(0,n.kt)("h2",{id:"010-alpha"},"0.1.0-alpha"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Initial release")))}p.isMDXComponent=!0}}]);