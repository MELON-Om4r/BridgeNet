"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[740],{93294:function(e){e.exports=JSON.parse('{"functions":[{"name":"_start","desc":"Starts the internal processes for ClientBridge.","params":[{"name":"config","desc":"","lua_type":"dictionary"}],"returns":[],"function_type":"static","ignore":true,"source":{"line":32,"path":"src/ClientBridge.lua"}},{"name":"Fire","desc":"The equivelant of :FireServer().\\n\\n```lua\\nlocal Bridge = ClientBridge.new(\\"Remote\\")\\n\\nBridge:Fire(\\"Hello\\", \\"world!\\")\\n```","params":[{"name":"...","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","source":{"line":107,"path":"src/ClientBridge.lua"}},{"name":"Connect","desc":"Creates a connection. Can be disconnected using :Disconnect().\\n\\n```lua\\nlocal Bridge = ClientBridge.new(\\"Remote\\")\\n\\nBridge:Connect(function(text)\\n\\tprint(text)\\nend)\\n```","params":[{"name":"func","desc":"","lua_type":"function"}],"returns":[],"function_type":"method","source":{"line":127,"path":"src/ClientBridge.lua"}},{"name":"Destroy","desc":"Destroys the ClientBridge object. Doesn\'t destroy the RemoteEvent, or destroy the identifier. It doesn\'t send anything to the server. Just destroys the client sided object.\\n\\n```lua\\nlocal Bridge = ClientBridge.new(\\"Remote\\")\\n\\nClientBridge:Destroy()\\n\\nClientBridge:Fire() -- Errors\\n```","params":[],"returns":[],"function_type":"method","source":{"line":147,"path":"src/ClientBridge.lua"}}],"properties":[],"types":[],"name":"ClientBridge","desc":"Client-sided object for handling networking. Since it\'s on the client, all it really handles is queueing.","source":{"line":23,"path":"src/ClientBridge.lua"}}')}}]);