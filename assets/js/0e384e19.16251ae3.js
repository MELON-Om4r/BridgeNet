"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{59881:function(e,t,i){i.r(t),i.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return d},default:function(){return p}});var r=i(87462),n=i(63366),o=(i(67294),i(3905)),a=["components"],l={sidebar_position:1},s="BridgeNet",u={unversionedId:"intro",id:"intro",isDocsHomePage:!1,title:"BridgeNet",description:"BridgeNet is a networking library that solves a multitude of annoyances and problems when working directly with RemoteEvents, while remaining performant",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/BridgeNet/docs/intro",editUrl:"https://github.com/ffrostflame/bridgenet/edit/master/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"defaultSidebar",next:{title:"Installation",permalink:"/BridgeNet/docs/Installation"}},d=[{value:"Features",id:"features",children:[],level:2},{value:"Upcoming features (order = priority)",id:"upcoming-features-order--priority",children:[],level:2},{value:"Prior art",id:"prior-art",children:[],level:2}],m={toc:d};function p(e){var t=e.components,i=(0,n.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"bridgenet"},"BridgeNet"),(0,o.kt)("p",null,"BridgeNet is a networking library that solves a multitude of annoyances and problems when working directly with RemoteEvents, while remaining performant\nand not loosing the ability to easily debug. BridgeNet takes a philosophy of letting the developer optimize what's sent over the wire, while optimizing the calls itself,\ntrying to be as non-intrusive as possible."),(0,o.kt)("h2",{id:"features"},"Features"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A multitude of utility functions such as ",(0,o.kt)("inlineCode",{parentName:"li"},":FireAllInRange()"),", ",(0,o.kt)("inlineCode",{parentName:"li"},":FireAllExcept"),", and ",(0,o.kt)("inlineCode",{parentName:"li"},":FireAllInRangeExcept"),"."),(0,o.kt)("li",{parentName:"ul"},"Directly cutting down the amount of data it takes to call a remote event"),(0,o.kt)("li",{parentName:"ul"},"Easy-to-use, dynamic serialization/deserialization layer"),(0,o.kt)("li",{parentName:"ul"},"Dynamic send/receive rates"),(0,o.kt)("li",{parentName:"ul"},"Dynamically creating RemoteEvents while keeping all the above features")),(0,o.kt)("h2",{id:"upcoming-features-order--priority"},"Upcoming features (order = priority)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Support for rate limiting and middleware"),(0,o.kt)("li",{parentName:"ul"},"Typechecking"),(0,o.kt)("li",{parentName:"ul"},"Easy logging support"),(0,o.kt)("li",{parentName:"ul"},"RemoteFunction-esque functions (this would support promises)"),(0,o.kt)("li",{parentName:"ul"},"Using attributes instead of value objects")),(0,o.kt)("h2",{id:"prior-art"},"Prior art"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"RbxNet"),(0,o.kt)("li",{parentName:"ul"},"This is a continuation of my previous networking system ",(0,o.kt)("a",{parentName:"li",href:"https://devforum.roblox.com/t/networkobject-a-light-weight-network-module-usable-for-everyone/1526416"},"NetworkObject")),(0,o.kt)("li",{parentName:"ul"},"This ",(0,o.kt)("a",{parentName:"li",href:"https://devforum.roblox.com/t/ore-one-remote-event/569721/25"},"devforum post")," by Tomarty")))}p.isMDXComponent=!0}}]);