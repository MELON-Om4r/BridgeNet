"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[797],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>g});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=c(r),g=i,m=p["".concat(s,".").concat(g)]||p[g]||u[g]||a;return r?n.createElement(m,l(l({ref:t},d),{},{components:r})):n.createElement(m,l({ref:t},d))}));function g(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,l=new Array(a);l[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<a;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},31875:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var n=r(87462),i=(r(67294),r(3905));const a={sidebar_position:3},l="Getting Started",o={unversionedId:"Getting Started",id:"Getting Started",title:"Getting Started",description:"BridgeNet requires you to run the `Start` function with a configuration object passed in. This should look like:",source:"@site/docs/Getting Started.md",sourceDirName:".",slug:"/Getting Started",permalink:"/BridgeNet/docs/Getting Started",draft:!1,editUrl:"https://github.com/ffrostflame/bridgenet/edit/main/docs/Getting Started.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Installation",permalink:"/BridgeNet/docs/Installation"},next:{title:"Server-Client Example",permalink:"/BridgeNet/docs/Server-Client Example"}},s={},c=[{value:"Using BridgeNet",id:"using-bridgenet",level:2},{value:"Using the identifier system",id:"using-the-identifier-system",level:2}],d={toc:c};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"getting-started"},"Getting Started"),(0,i.kt)("p",null,"BridgeNet requires you to run the ",(0,i.kt)("inlineCode",{parentName:"p"},"Start")," function with a configuration object passed in. This should look like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="init.lua"',title:'"init.lua"'},"local BridgeNet = require(ReplicatedStorage.Packages.BridgeNet)\n\nBridgeNet.Start({\n    send_default_rate = 60,\n    receive_default_rate = 60,\n})\n")),(0,i.kt)("p",null,"This starts up all the internal BridgeNet processes, and allows you to use the library. It should be called once per server/client. You do not\nneed to call this anywhere else."),(0,i.kt)("h2",{id:"using-bridgenet"},"Using BridgeNet"),(0,i.kt)("p",null,'BridgeNet uses objects known as "bridges". These objects are the equivelant of RemoteEvents in normal Roblox. They are created as such:'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="init.lua"',title:'"init.lua"'},'local Bridge = BridgeNet.CreateBridge("RemoteNameHere")\nBridge:FireAll("Firing all players")\n')),(0,i.kt)("p",null,"All the optimizations are handled for you! These is packaged, sent out with a compressed string ID, and received on the client."),(0,i.kt)("h2",{id:"using-the-identifier-system"},"Using the identifier system"),(0,i.kt)("p",null,"A common pattern in Roblox are constant strings that are sent over the client/server boundary. These are typically\nstatic, and can depict things like action requests, item names, all of that. This library provides an easy system to optimize\nthese: the 3 functions ",(0,i.kt)("inlineCode",{parentName:"p"},"CreateIdentifier"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"WhatIsThis"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"DestroyIdentifier"),". They are used as such:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="spellHandler.client.lua"',title:'"spellHandler.client.lua"'},'local SpellCaster = BridgeNet.CreateBridge("SpellCaster")\n\nlocal Fireball = BridgeNet.CreateIdentifier("Fireball")\n\nSomeUserInputSignalHere:Connect(function()\n    SpellCaster:Fire(Fireball) -- Fires a 1 or 2 character string, much smaller than an 8-character string.\nend)\n')))}u.isMDXComponent=!0}}]);